{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\u0418\\u0432\\u0430\\u043D\\\\Desktop\\\\A-level\\\\myProject\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, Component, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Provider, connect } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport jwt_decode from \"jwt-decode\";\nlet url = 'http://shop-roles.asmer.fs.a-level.com.ua/graphql',\n    logLogin = document.querySelector(\"#login\"),\n    logPassword = document.querySelector(\"#password\"),\n    regLogin = document.querySelector(\"#regLogin\"),\n    regPassword = document.querySelector(\"#regPassword\"),\n    logBtn = document.querySelector(\"#logBtn\"),\n    regBtn = document.querySelector(\"#regBtn\"); // const store = createStore((state={}, \n//     {type, status, payload, error, name}) =>\n//     (type === 'PROMISE') ? {...state, [name]: {status, payload, error}} : state, \n//     applyMiddleware(thunk)) //вторым параметром идет миддлварь\n\nconst reducers = {\n  promise(state = {}, action) {\n    // if (['LOGOUT', 'LOGIN'].includes(action.type)) return {}\n    if (action.type === 'PROMISE') {\n      const {\n        name = \"default\",\n        status,\n        payload,\n        error\n      } = action;\n\n      if (status) {\n        return { ...state,\n          [name]: {\n            status,\n            payload: status === 'PENDING' && state[name] && state[name].payload || payload,\n            error\n          }\n        };\n      }\n    }\n\n    return state;\n  },\n\n  auth(state, action) {\n    if (state === undefined) {\n      //добавить в action token из localStorage, и проимитировать LOGIN (action.type = 'LOGIN')\n      const token = localStorage.getItem('token');\n      console.log(token);\n\n      if (token !== 'undefined' || token !== 'null') {\n        action.type = 'LOGIN';\n        action.payload = token;\n      } else return {};\n    }\n\n    if (action.type === 'LOGIN') {\n      console.log('ЛОГИН');\n      localStorage.setItem('token', action.payload);\n      return {\n        token: action.payload,\n        payload: jwt_decode(action.payload)\n      };\n    }\n\n    if (action.type === 'LOGOUT') {\n      console.log('ЛОГАУТ');\n      localStorage.setItem('token', undefined);\n      return {};\n    }\n\n    return state;\n  }\n\n};\nlet store = createStore(combineReducers(reducers), applyMiddleware(thunk));\n\nconst gql = (url = url, query = '', variables = {}) => fetch(url, {\n  method: 'POST',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    query,\n    variables\n  })\n}).then(res => res.json());\n\nfunction loginQuery(login, password) {\n  return gql(url, `query log($login:String, $password:String){\n        login(login:$login, password:$password)\n    }`, {\n    login: login,\n    password: password\n  });\n}\n\nfunction registerQuery(login, password) {\n  return gql(url, `mutation reg($login:String, $password:String){\n        UserUpsert(user: {login:$login, password:$password}){\n            _id, login\n        }\n    }`, {\n    login: login,\n    password: password\n  });\n}\n\nconst actionPromise = (name, p) => {\n  //прикрутить имя промиса строковое \n  const actionPending = () => ({\n    type: 'PROMISE',\n    status: 'PENDING',\n    name\n  }); //имя должно попадать в объект action\n\n\n  const actionResolved = payload => ({\n    type: 'PROMISE',\n    //поэтому имя параметр или имя name берется из замыкания\n    status: 'RESOLVED',\n    payload,\n    name\n  });\n\n  const actionRejected = error => ({\n    type: 'PROMISE',\n    status: 'REJECTED',\n    error,\n    name\n  });\n\n  return async dispatch => {\n    try {\n      dispatch(actionPending());\n      let result = await p;\n      dispatch(actionResolved(result));\n      return result;\n    } catch (e) {\n      dispatch(actionRejected(e));\n    }\n  };\n};\n\nconst actionDefferredPromise = (ms, getPromise) => async dispatch => {\n  await dispatch(actionPromise('delay', delay(ms))); //REGISTER\n\n  await dispatch(actionPromise('defferred', getPromise())); //LOGIN\n}; // store.dispatch(actionPromise('LOGIN', loginQuery(undefined, undefined)))\n\n\nconst delay = ms => new Promise(ok => setTimeout(() => ok(ms), ms));\n\nstore.dispatch(actionDefferredPromise(2000, () => fetch('https://api.exchangeratesapi.io/latest').then(res => res.json())));\nstore.dispatch(actionPromise('categories', gql(url, `\n    query cats($q: String){\n        CategoryFind(query:$q){\n            _id name goods{\n                _id name\n            }\n        }\n    }`, {\n  q: JSON.stringify([{}])\n})));\n\nconst actionCategories = name => {};\n\nstore.subscribe(() => console.log(store.getState()));\n\nconst actionLogin = (login, password) => async dispatch => {\n  let result = await dispatch(actionPromise('LOGIN', loginQuery(login, password))); // console.log(result.data.login)\n\n  dispatch({\n    type: \"LOGIN\",\n    payload: result.data.login\n  });\n};\n\nconst actionLogout = () => async dispatch => {\n  await dispatch(actionPromise('LOGIN', undefined));\n  dispatch({\n    type: \"LOGOUT\"\n  });\n};\n\nconst actionRegister = (login, password) => actionPromise('REGISTER', registerQuery(login, password)); //REGISTER\n\n\nconst CategoriesForm = categories => {};\n\n_c = CategoriesForm;\n\nconst LoginForm = ({\n  onLogin,\n  btnText = 'Login'\n}) => {\n  _s();\n\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LoginForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: login,\n      onChange: e => setLogin(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        onLogin(login, password);\n      },\n      children: btnText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginForm, \"VcBgZJo7FqEfiNjdD6W1/t1hnvQ=\");\n\n_c2 = LoginForm;\n\nconst RegisterForm = ({\n  onRegister,\n  btnText = 'register'\n}) => {\n  _s2();\n\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RegisterForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: login,\n      onChange: e => setLogin(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        onRegister(login, password);\n      },\n      children: btnText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(RegisterForm, \"VcBgZJo7FqEfiNjdD6W1/t1hnvQ=\");\n\n_c3 = RegisterForm;\n\nconst Login = ({\n  loginData: {\n    payload,\n    token\n  } = {}\n}) => {\n  let username = 'anon';\n\n  if (token !== undefined) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: payload.sub.login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 16\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: username\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 19\n  }, this);\n};\n\n_c4 = Login;\nconst CLoginForm = connect(null, {\n  onLogin: actionLogin\n})(LoginForm);\nconst CRegisterForm = connect(null, {\n  onRegister: actionRegister\n})(RegisterForm); // const CTablo = connect(s => ({children: s.login && s.login.status}))('h1')\n\nconst CMyLogin = connect(s => ({\n  loginData: s.auth.payload == undefined ? 'anon' : s.auth\n}))(Login);\nconst CLogout = connect(s => ({\n  children: s.auth.payload == undefined ? 'anon' : s.auth.payload.sub.login\n}), {\n  onClick: actionLogout\n})(\"button\");\n\nfunction App() {\n  //const [startValue, setStartValue] = useState(0)\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: [/*#__PURE__*/_jsxDEV(CMyLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CLoginForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CLogout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CRegisterForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"CategoriesForm\");\n$RefreshReg$(_c2, \"LoginForm\");\n$RefreshReg$(_c3, \"RegisterForm\");\n$RefreshReg$(_c4, \"Login\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["C:/Users/Иван/Desktop/A-level/myProject/src/App.js"],"names":["React","useState","Component","useEffect","Provider","connect","thunk","createStore","combineReducers","applyMiddleware","jwt_decode","url","logLogin","document","querySelector","logPassword","regLogin","regPassword","logBtn","regBtn","reducers","promise","state","action","type","name","status","payload","error","auth","undefined","token","localStorage","getItem","console","log","setItem","store","gql","query","variables","fetch","method","headers","body","JSON","stringify","then","res","json","loginQuery","login","password","registerQuery","actionPromise","p","actionPending","actionResolved","actionRejected","dispatch","result","e","actionDefferredPromise","ms","getPromise","delay","Promise","ok","setTimeout","q","actionCategories","subscribe","getState","actionLogin","data","actionLogout","actionRegister","CategoriesForm","categories","LoginForm","onLogin","btnText","setLogin","setPassword","target","value","RegisterForm","onRegister","Login","loginData","username","sub","CLoginForm","CRegisterForm","CMyLogin","s","CLogout","children","onClick","App"],"mappings":"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","sourcesContent":["import React, {useState, Component, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Provider, connect}   from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport jwt_decode from \"jwt-decode\";\n\n\nlet url = 'http://shop-roles.asmer.fs.a-level.com.ua/graphql',\n    logLogin = document.querySelector(\"#login\"),\n    logPassword = document.querySelector(\"#password\"),\n    regLogin = document.querySelector(\"#regLogin\"),\n    regPassword = document.querySelector(\"#regPassword\"),\n    logBtn = document.querySelector(\"#logBtn\"),\n    regBtn = document.querySelector(\"#regBtn\");\n\n// const store = createStore((state={}, \n//     {type, status, payload, error, name}) =>\n//     (type === 'PROMISE') ? {...state, [name]: {status, payload, error}} : state, \n//     applyMiddleware(thunk)) //вторым параметром идет миддлварь\n\nconst reducers = {\n    promise(state={}, action){\n        // if (['LOGOUT', 'LOGIN'].includes(action.type)) return {}\n        if (action.type === 'PROMISE'){\n            const { name=\"default\", status, payload, error} = action\n            if (status){\n                return {\n                    ...state, [name]: {status, payload: (status === 'PENDING' && state[name] && state[name].payload) || payload, error}\n                }\n            }\n        }\n        return state;\n    },\n    auth(state, action){ \n        if (state === undefined){\n            //добавить в action token из localStorage, и проимитировать LOGIN (action.type = 'LOGIN')\n            const token = localStorage.getItem('token')\n            console.log(token)\n            if (token !== 'undefined' || token !== 'null') {\n                action.type = 'LOGIN'\n                action.payload = token;\n            } else return {}\n        }\n\n        if (action.type === 'LOGIN'){\n            console.log('ЛОГИН')\n            localStorage.setItem('token', action.payload);\n            return {token: action.payload, payload: jwt_decode(action.payload)}\n        }\n\n        if (action.type === 'LOGOUT'){\n            console.log('ЛОГАУТ')\n            localStorage.setItem('token', undefined)\n            return {}\n        }\n        return state\n    }\n}\nlet store = createStore(combineReducers(reducers), applyMiddleware(thunk))\n\nconst gql = (url = url, query='', variables={}) =>\nfetch(url, {\n    method: 'POST',\n    headers:{\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'            \n        },\n    body: JSON.stringify({query, variables})\n}).then(res => res.json())\n\nfunction loginQuery(login, password) {\n    return gql(url, \n    `query log($login:String, $password:String){\n        login(login:$login, password:$password)\n    }`, \n    {login: login, password: password})\n}\n\nfunction registerQuery(login, password) {\n    return gql(url, \n    `mutation reg($login:String, $password:String){\n        UserUpsert(user: {login:$login, password:$password}){\n            _id, login\n        }\n    }`, \n    {login: login, password: password})\n}\n\nconst actionPromise = (name, p) => { //прикрутить имя промиса строковое \n\n    const actionPending = () => ({type : 'PROMISE', status: 'PENDING', name}) //имя должно попадать в объект action\n    const actionResolved = payload => ({type : 'PROMISE',  //поэтому имя параметр или имя name берется из замыкания\n                                        status: 'RESOLVED', \n                                        payload, name})\n    const actionRejected = error => ({type : 'PROMISE', \n                                        status: 'REJECTED', \n                                        error, name})\n    return async dispatch => {\n        try {\n            dispatch(actionPending())\n            let result = await p\n            dispatch(actionResolved(result))\n            return result;\n        }\n        catch(e){\n            dispatch(actionRejected(e))\n        }\n    }\n}\n\nconst actionDefferredPromise = (ms, getPromise) =>\n    async dispatch => {\n        await dispatch(actionPromise('delay', delay(ms))) //REGISTER\n        await dispatch(actionPromise('defferred', getPromise())) //LOGIN\n    }\n\n// store.dispatch(actionPromise('LOGIN', loginQuery(undefined, undefined)))\nconst delay = ms => new Promise(ok => setTimeout(() => ok(ms), ms))\nstore.dispatch(actionDefferredPromise(2000, () =>\n            fetch('https://api.exchangeratesapi.io/latest')\n                    .then(res => res.json())))\n\nstore.dispatch(actionPromise('categories', gql(url, `\n    query cats($q: String){\n        CategoryFind(query:$q){\n            _id name goods{\n                _id name\n            }\n        }\n    }`, {q: JSON.stringify([{}])})))\n\nconst actionCategories = (name) => {\n    \n}\n\n\nstore.subscribe(() => console.log(store.getState()))\n\nconst actionLogin = (login, password) => \n    async dispatch => {\n        let result = await dispatch(actionPromise('LOGIN', loginQuery(login, password)))\n        // console.log(result.data.login)\n        dispatch({\n            type: \"LOGIN\",\n            payload: result.data.login \n         })\n    }\n\nconst actionLogout = () => \n    async dispatch => {\n        await dispatch(actionPromise('LOGIN', undefined))\n        dispatch({\n            type: \"LOGOUT\",\n        })\n    }\n\nconst actionRegister = (login, password) =>\n    actionPromise('REGISTER', registerQuery(login, password)) //REGISTER\n\nconst CategoriesForm = (categories) => {\n\n}\n\nconst LoginForm = ({onLogin, btnText='Login'}) => {\n    const [login, setLogin] = useState('')\n    const [password, setPassword] = useState('')\n    return (\n        <div className='LoginForm'>\n            <input type='text' \n                value={login} \n                onChange={e => setLogin(e.target.value)}/>\n                <input type='text' \n                value={password} \n                onChange={e => setPassword(e.target.value)}/>\n            <button onClick={() => {onLogin(login, password)}}>{btnText}</button>\n        </div>\n    )\n}\n\nconst RegisterForm = ({onRegister, btnText='register'}) => {\n    const [login, setLogin] = useState('')\n    const [password, setPassword] = useState('')\n    return (\n        <div className='RegisterForm'>\n            <input type='text' \n                value={login} \n                onChange={e => setLogin(e.target.value)}/>\n                <input type='text' \n                value={password} \n                onChange={e => setPassword(e.target.value)}/>\n            <button onClick={() => {onRegister(login, password)}}>{btnText}</button>\n        </div>\n    )\n}\n\nconst Login = ({loginData:{payload, token}={}}) => {\n    let username = 'anon';\n    if (token !== undefined) {\n        return <h1>{payload.sub.login}</h1>\n    } else return <h1>{username}</h1>\n}\n\nconst CLoginForm = connect(null, {onLogin: actionLogin})(LoginForm)\nconst CRegisterForm = connect(null, {onRegister: actionRegister})(RegisterForm)\n// const CTablo = connect(s => ({children: s.login && s.login.status}))('h1')\n\nconst CMyLogin = connect(s => ({loginData: s.auth.payload == undefined ? 'anon' : s.auth}))(Login)\nconst CLogout = connect(s => ({children: s.auth.payload == undefined ? 'anon' : s.auth.payload.sub.login}), {onClick: actionLogout})(\"button\")\n\nfunction App() {\n  //const [startValue, setStartValue] = useState(0)\n  return (\n      <>\n        <Provider store = {store}>\n        <CMyLogin/>\n        <CLoginForm/>\n        <CLogout/>\n        <CRegisterForm/>\n        {/* <CTablo/> */}\n        {/* <LoginForm onLogin={(login, password) => console.log(login, password)}/> */}\n        </Provider>\n      </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}